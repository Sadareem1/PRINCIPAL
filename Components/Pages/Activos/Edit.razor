@page "/activos/editar/{Id:int}"
@attribute [Authorize(Policy = "GestionTecnica")]

@inject IActivosService ActivosService
@inject NavigationManager Navigation
@inject AppDbContext DbContext

<h1>Editar activo</h1>

@if (Modelo is null)
{
    <p>Cargando...</p>
}
else
{
    <EditForm Model="@Modelo" OnValidSubmit="GuardarAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-grid">
            <label>Código inventario</label>
            <InputText @bind-Value="Modelo.CodigoInventario" />

            <label>Marca</label>
            <InputText @bind-Value="Modelo.Marca" />

            <label>Modelo</label>
            <InputText @bind-Value="Modelo.Modelo" />

            <label>Número de serie</label>
            <InputText @bind-Value="Modelo.NumeroSerie" />

            <label>Categoría</label>
            <InputText @bind-Value="Modelo.Categoria" />

            <label>Ubicación</label>
            <InputText @bind-Value="Modelo.Ubicacion" />

            <label>Área</label>
            <InputSelect @bind-Value="Modelo.AreaId">
                <option value="">Seleccione</option>
                @foreach (var area in Areas)
                {
                    <option value="@area.Id">@area.Nombre</option>
                }
            </InputSelect>

            <label>Planta</label>
            <InputSelect @bind-Value="Modelo.PlantaId">
                <option value="">Seleccione</option>
                @foreach (var planta in Plantas)
                {
                    <option value="@planta.Id">@planta.Nombre</option>
                }
            </InputSelect>

            <label>Estado</label>
            <InputSelect @bind-Value="Modelo.Estado">
                @foreach (EstadoActivo estado in Enum.GetValues(typeof(EstadoActivo)))
                {
                    <option value="@estado">@estado</option>
                }
            </InputSelect>

            <label>Notas</label>
            <InputTextArea @bind-Value="Modelo.Notas" />
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }

    private Activo? Modelo { get; set; }
    private List<Area> Areas { get; set; } = new();
    private List<Planta> Plantas { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Modelo = await ActivosService.ObtenerPorIdAsync(Id);
        Areas = await DbContext.Areas.Where(a => a.Activo).ToListAsync();
        Plantas = await DbContext.Plantas.Where(p => p.Activo).ToListAsync();
    }

    private async Task GuardarAsync()
    {
        if (Modelo is null) return;

        await ActivosService.ActualizarAsync(Modelo);
        Navigation.NavigateTo("/activos");
    }

    private void Cancelar() => Navigation.NavigateTo("/activos");
}
